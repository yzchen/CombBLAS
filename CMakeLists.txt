SET(CMAKE_CXX_COMPILER c++)
SET(CMAKE_C_COMPILER cc)
INCLUDE(CheckIncludeFileCXX)

cmake_minimum_required(VERSION 3.0)
PROJECT( COMBINATORIAL_BLAS )
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
add_definitions(-DTHREADED)

INCLUDE(TestCXXAcceptsFlag.cmake)
# set(CMAKE_CXX_FLAGS_DEBUG "-std=c++11 -std=c++14 -fopenmp -fPIC -O0 -g3 -ggdb")
CHECK_CXX_ACCEPTS_FLAG("-std=c++11 -std=c++14" C14)

if (NOT C14)
       MESSAGE(FATAL_ERROR "Your compiler does not support C++14")
else (NOT C14)
	if (CMAKE_COMPILER_IS_GNUCXX)
		SET(CMAKE_CXX_FLAGS "-I/opt/cray/pe/mpt/7.7.0/gni/mpich-gnu/5.1/include -L/opt/cray/pe/mpt/7.7.0/gni/mpich-gnu/5.1/lib -std=c++11 -std=c++14 -fopenmp -DTHREADED -DNDEBUG -w -DGRAPH_GENERATOR_SEQ -O3 -DMPICH_IGNORE_CXX_SEEK")
		SET(CMAKE_C_FLAGS "/opt/cray/pe/mpt/7.7.0/gni/mpich-gnu/5.1/include -L/opt/cray/pe/mpt/7.7.0/gni/mpich-gnu/5.1/lib -DTHREADED -fopenmp -DNDEBUG -Drestrict=__restrict__ -w -DGRAPH_GENERATOR_SEQ -O3 -DMPICH_IGNORE_CXX_SEEK")
#		SET(CMAKE_CXX_FLAGS "-std=c++11 -std=c++14 -fopenmp -DNDEBUG -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
#		SET(CMAKE_C_FLAGS "-DNDEBUG -Drestrict=__restrict__ -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
	else (CMAKE_COMPILER_IS_GNUCXX)
		CHECK_CXX_ACCEPTS_FLAG(-std=c++0x C0X)
		if (C0X)
			SET(CMAKE_CXX_FLAGS "-std=c++0x -std=c++11 -std=c++14 -fopenmp -DNOTGNU -DNDEBUG -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
			SET(CMAKE_C_FLAGS "-DNOTGNU -DNDEBUG -Drestrict=__restrict__ -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
		else (C0X)
			SET(CMAKE_CXX_FLAGS "-std=c++11 -std=c++14 -DNOTGNU -fopenmp -DNDEBUG -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
			SET(CMAKE_C_FLAGS "-DNOTGNU -DNDEBUG -Drestrict=__restrict__ -w -DGRAPH_GENERATOR_SEQ -O2 -DMPICH_IGNORE_CXX_SEEK")
		endif (C0X)
	endif (CMAKE_COMPILER_IS_GNUCXX)
endif (NOT C14)

ADD_LIBRARY( CommGridlib src/CommGrid.cpp)
ADD_LIBRARY( MPITypelib src/MPIType.cpp)
ADD_LIBRARY( MPIOplib src/MPIOp.cpp)
ADD_LIBRARY( MemoryPoollib src/MemoryPool.cpp)
ADD_LIBRARY( Hashlib src/hash.cpp)
ADD_LIBRARY( mmiolib src/mmio.c)

ADD_SUBDIRECTORY( selfTests )
# ADD_SUBDIRECTORY( usort )
# ADD_SUBDIRECTORY( graph500-1.2/generator )
# ADD_SUBDIRECTORY( Ordering )
# ADD_SUBDIRECTORY( Applications/SpMSpV-IPDPS2017 )
