#######################################################
Reading graph [/data/fuad/magiq_data/lubm10240/encoded.nt]...
    File read time:      536.751785
    Graph construction time: 226.280707
    Transpose construction time: 213.951375
    Graph load (total):   976.984059
#######################################################

#######################################################
Query: [../encoded_queries/lubm10240/five_copies/l1__1.q_encoded]
========
Node to qnode:
    (22638->0) (24->1) (8622222->2) (?x->3) (?y->4) (?z->5)
Equal pairs:
    (6->5)
Edges:
    {(3,1)->6} {(3,4)->2} {(3,5)->10} {(4,2)->6} {(5,0)->6}
    {(6,4)->11}
Directed adjacency list:
    0()  1()  2()  3(5,1,4)  4(2)  5(4,0)
Tree adjacency list:
    0(5)  1(3)  2(4)  3(1,5,4)  4(6,2,3)  5(3,0)  6(4)
========
DDFS walk:
    (0,5) (5,3) (3,1) (3,4) (4,2) (4,6) (4,3) (3,5) (5,0)
=========================================================
Query plan:
m_(0,5) = {1@(22638,22638)}*6            x G.T()
m_(5,3) = m_(0,5).T().D()*10             x G.T()
m_(3,1) = m_(5,3).T().D()*6              x G
m_(3,1) = m_(3,1)                        x {1@(24,24)}
m_(3,4) = m_(3,1).D()*2                  x G
m_(4,2) = m_(3,4).T().D()*6              x G
m_(4,2) = m_(4,2)                        x {1@(8622222,8622222)}
m_(4,6) = m_(4,2).D()*11                 x G.T()
m_(4,6) = m_(4,6)                        x m_(5,3).D()
m_(5,3) = m_(4,6).T().D()                x m_(5,3)
m_(3,4) = m_(3,4)                        x m_(4,6).D()
m_(5,3) = m_(5,3)                        x m_(3,4).D()
m_(0,5) = m_(0,5)                        x m_(5,3).D()
=========================================================
Query plan: (CSC friendly)
m_(5,0) = G                              x {1@(22638,22638)}*6
m_(3,5) = G                              x m_(5,0).D()*10
m_(1,3) = G.T()                          x m_(3,5).D()*6
m_(1,3) = {1@(24,24)}                    x m_(1,3)
m_(4,3) = G.T()                          x m_(1,3).T().D()*2
m_(2,4) = G.T()                          x m_(4,3).D()*6
m_(2,4) = {1@(8622222,8622222)}          x m_(2,4)
m_(6,4) = G                              x m_(2,4).T().D()*11
m_(6,4) = m_(3,5).T().D()                x m_(6,4)
m_(3,5) = m_(3,5)                        x m_(6,4).D()
m_(4,3) = m_(6,4).T().D()                x m_(4,3)
m_(3,5) = m_(4,3).T().D()                x m_(3,5)
m_(5,0) = m_(3,5).T().D()                x m_(5,0)
=========================================================
[6.357166] m_(5,0) = G                              x {1@(22638,22638)}*6
    m1[0.000000] m2[0.000006] mul[6.226158] SS_mxm[4.741454] T[0.000000] zero_clean[1.378067]
--------------------------------------------------------
[8.562233] m_(3,5) = G                              x m_(5,0).D()*10
    m1[0.000000] m2[0.138890] mul[8.294695] SS_mxm[5.808599] T[0.000000] zero_clean[2.339957]
--------------------------------------------------------
[42.196244] m_(1,3) = G.T()                          x m_(3,5).D()*6
    m1[0.000000] m2[14.966402] mul[27.088413] SS_mxm[21.882301] T[0.000000] zero_clean[4.705480]
--------------------------------------------------------
[11.534783] m_(1,3) = {1@(24,24)}                    x m_(1,3)
    m1[0.000018] m2[2.126035] mul[9.131563] SS_mxm[7.013675] T[0.000000] zero_clean[1.861847]
--------------------------------------------------------
[17.151366] m_(4,3) = G.T()                          x m_(1,3).T().D()*2
    m1[0.000001] m2[2.650592] mul[14.390164] SS_mxm[11.743875] T[0.000001] zero_clean[2.355588]
--------------------------------------------------------
[6.542175] m_(2,4) = G.T()                          x m_(4,3).D()*6
    m1[0.000000] m2[0.299167] mul[6.141610] SS_mxm[4.557342] T[0.000000] zero_clean[1.453901]
--------------------------------------------------------
[7.889451] m_(2,4) = {1@(8622222,8622222)}          x m_(2,4)
    m1[0.000019] m2[1.525737] mul[6.128776] SS_mxm[4.532064] T[0.000000] zero_clean[1.343545]
--------------------------------------------------------
[8.646541] m_(6,4) = G                              x m_(2,4).T().D()*11
    m1[0.000001] m2[0.897149] mul[7.647235] SS_mxm[6.022170] T[0.000000] zero_clean[1.461307]
--------------------------------------------------------
[9.619669] m_(6,4) = m_(3,5).T().D()                x m_(6,4)
    m1[1.653804] m2[1.534197] mul[6.199028] SS_mxm[4.604024] T[0.000000] zero_clean[1.350857]
--------------------------------------------------------
[8.783806] m_(3,5) = m_(3,5)                        x m_(6,4).D()
    m1[2.097598] m2[0.013236] mul[6.435546] SS_mxm[4.653296] T[0.000000] zero_clean[1.535181]
--------------------------------------------------------
[10.512057] m_(4,3) = m_(6,4).T().D()                x m_(4,3)
    m1[0.902999] m2[1.643515] mul[7.743754] SS_mxm[5.645654] T[0.000001] zero_clean[1.861934]
--------------------------------------------------------
[11.570135] m_(3,5) = m_(4,3).T().D()                x m_(3,5)
    m1[2.633131] m2[1.574480] mul[7.126757] SS_mxm[5.453736] T[0.000000] zero_clean[1.404596]
--------------------------------------------------------
[8.844632] m_(5,0) = m_(3,5).T().D()                x m_(5,0)
    m1[0.932153] m2[1.527695] mul[6.206693] SS_mxm[4.543500] T[0.000000] zero_clean[1.448554]
--------------------------------------------------------
=========================================================
--------------------------------------------------------
Initial fill from m(5,0): num_nnz[20020] get_nz[0.303644] vec_fill[0.001352]
  Fill from m(3,5): num_rec[   2522616] get_nz[0.636280] vec_cp[0.195532]
  Fill from m(4,3): num_rec[   2522616] get_nz[0.690270] vec_cp[0.043505]
  Fill from m(6,4): num_rec[      2528] get_nz[0.492576] vec_cp[0.058769]
  Fill from m(2,4): num_rec[      2528] get_nz[0.002214] vec_cp[0.000057]
  Fill from m(1,3): num_rec[      2528] get_nz[0.002957] vec_cp[0.000074]
--------------------------------------------------------
Num recs: 2528
--------------------------------------------------------
Query muls time:        158.210648
Query result enum time: 2.589152
Query time (total):     161.645465
##############################################################################################################

#######################################################
Query: [../encoded_queries/lubm10240/five_copies/l2__1.q_encoded]
========
Node to qnode:
    (79->0) (?x->1) (?y->2)
No cycles
Edges:
    {(1,0)->6} {(1,2)->3}
Directed adjacency list:
    0()  1(0,2)  2()
Tree adjacency list:
    0(1)  1(0,2)  2(1)
========
DDFS walk:
    (0,1) (1,2) (1,0)
=========================================================
Query plan:
m_(0,1) = {1@(79,79)}*6                  x G.T()
m_(1,2) = m_(0,1).T().D()*3              x G
m_(0,1) = m_(0,1)                        x m_(1,2).D()
=========================================================
Query plan: (CSC friendly)
m_(1,0) = G                              x {1@(79,79)}*6
m_(2,1) = G.T()                          x m_(1,0).D()*3
m_(1,0) = m_(2,1).T().D()                x m_(1,0)
=========================================================
[6.968588] m_(1,0) = G                              x {1@(79,79)}*6
    m1[0.000000] m2[0.000008] mul[6.831945] SS_mxm[5.115394] T[0.000000] zero_clean[1.571948]
--------------------------------------------------------
[12.884928] m_(2,1) = G.T()                          x m_(1,0).D()*3
    m1[0.000000] m2[2.225674] mul[10.519546] SS_mxm[8.702586] T[0.000000] zero_clean[1.659676]
--------------------------------------------------------
[12.149082] m_(1,0) = m_(2,1).T().D()                x m_(1,0)
    m1[1.806776] m2[2.267958] mul[7.795878] SS_mxm[5.967215] T[0.000000] zero_clean[1.551105]
--------------------------------------------------------
=========================================================
--------------------------------------------------------
Initial fill from m(1,0): num_nnz[11058812] get_nz[0.402734] vec_fill[1.394281]
  Fill from m(2,1): num_rec[  11058812] get_nz[3.087767] vec_cp[0.140763]
--------------------------------------------------------
Num recs: 11058812
--------------------------------------------------------
Query muls time:        32.002734
Query result enum time: 5.310797
Query time (total):     37.741416
##############################################################################################################

#######################################################
Query: [../encoded_queries/lubm10240/five_copies/l3__1.q_encoded]
========
Node to qnode:
    (22638->0) (43->1) (8622222->2) (?x->3) (?y->4) (?z->5)
Equal pairs:
    (6->5)
Edges:
    {(3,1)->6} {(3,4)->2} {(3,5)->10} {(4,2)->6} {(5,0)->6}
    {(6,4)->11}
Directed adjacency list:
    0()  1()  2()  3(5,1,4)  4(2)  5(4,0)
Tree adjacency list:
    0(5)  1(3)  2(4)  3(1,5,4)  4(6,2,3)  5(3,0)  6(4)
========
DDFS walk:
    (0,5) (5,3) (3,1) (3,4) (4,2) (4,6) (4,3) (3,5) (5,0)
=========================================================
Query plan:
m_(0,5) = {1@(22638,22638)}*6            x G.T()
m_(5,3) = m_(0,5).T().D()*10             x G.T()
m_(3,1) = m_(5,3).T().D()*6              x G
m_(3,1) = m_(3,1)                        x {1@(43,43)}
m_(3,4) = m_(3,1).D()*2                  x G
m_(4,2) = m_(3,4).T().D()*6              x G
m_(4,2) = m_(4,2)                        x {1@(8622222,8622222)}
m_(4,6) = m_(4,2).D()*11                 x G.T()
m_(4,6) = m_(4,6)                        x m_(5,3).D()
m_(5,3) = m_(4,6).T().D()                x m_(5,3)
m_(3,4) = m_(3,4)                        x m_(4,6).D()
m_(5,3) = m_(5,3)                        x m_(3,4).D()
m_(0,5) = m_(0,5)                        x m_(5,3).D()
=========================================================
Query plan: (CSC friendly)
m_(5,0) = G                              x {1@(22638,22638)}*6
m_(3,5) = G                              x m_(5,0).D()*10
m_(1,3) = G.T()                          x m_(3,5).D()*6
m_(1,3) = {1@(43,43)}                    x m_(1,3)
m_(4,3) = G.T()                          x m_(1,3).T().D()*2
m_(2,4) = G.T()                          x m_(4,3).D()*6
m_(2,4) = {1@(8622222,8622222)}          x m_(2,4)
m_(6,4) = G                              x m_(2,4).T().D()*11
m_(6,4) = m_(3,5).T().D()                x m_(6,4)
m_(3,5) = m_(3,5)                        x m_(6,4).D()
m_(4,3) = m_(6,4).T().D()                x m_(4,3)
m_(3,5) = m_(4,3).T().D()                x m_(3,5)
m_(5,0) = m_(3,5).T().D()                x m_(5,0)
=========================================================
[6.761563] m_(5,0) = G                              x {1@(22638,22638)}*6
    m1[0.000000] m2[0.000013] mul[6.626069] SS_mxm[5.000771] T[0.000000] zero_clean[1.486951]
--------------------------------------------------------
[9.711501] m_(3,5) = G                              x m_(5,0).D()*10
    m1[0.000000] m2[0.144929] mul[9.431726] SS_mxm[6.786007] T[0.000000] zero_clean[2.461633]
--------------------------------------------------------
[47.058495] m_(1,3) = G.T()                          x m_(3,5).D()*6
    m1[0.000000] m2[15.530820] mul[31.350954] SS_mxm[26.110409] T[0.000000] zero_clean[4.748093]
--------------------------------------------------------
[13.593390] m_(1,3) = {1@(43,43)}                    x m_(1,3)
    m1[0.000025] m2[2.372847] mul[10.902143] SS_mxm[7.965487] T[0.000000] zero_clean[2.644122]
--------------------------------------------------------
[32.523236] m_(4,3) = G.T()                          x m_(1,3).T().D()*2
    m1[0.000000] m2[5.983291] mul[26.376316] SS_mxm[22.911738] T[0.000000] zero_clean[3.045009]
--------------------------------------------------------
=========================================================
--------------------------------------------------------
Num recs: 0
--------------------------------------------------------
Query muls time:        109.648386
Query result enum time: 0.000000
Query time (total):     110.377850
##############################################################################################################

#######################################################
Query: [../encoded_queries/lubm10240/five_copies/l4__1.q_encoded]
========
Node to qnode:
    (11->0) (1345->1) (?x->2) (?y1->3) (?y2->4) (?y3->5)
No cycles
Edges:
    {(2,0)->5} {(2,1)->6} {(2,3)->3} {(2,4)->12} {(2,5)->9}
Directed adjacency list:
    0()  1()  2(0,1,3,4,5)  3()  4()  5()
Tree adjacency list:
    0(2)  1(2)  2(0,1,3,4,5)  3(2)  4(2)  5(2)
========
DDFS walk:
    (0,2) (2,1) (2,3) (2,4) (2,5) (2,0)
=========================================================
Query plan:
m_(0,2) = {1@(11,11)}*5                  x G.T()
m_(2,1) = m_(0,2).T().D()*6              x G
m_(2,1) = m_(2,1)                        x {1@(1345,1345)}
m_(2,3) = m_(2,1).D()*3                  x G
m_(2,4) = m_(2,3).D()*12                 x G
m_(2,5) = m_(2,4).D()*9                  x G
m_(0,2) = m_(0,2)                        x m_(2,5).D()
=========================================================
Query plan: (CSC friendly)
m_(2,0) = G                              x {1@(11,11)}*5
m_(1,2) = G.T()                          x m_(2,0).D()*6
m_(1,2) = {1@(1345,1345)}                x m_(1,2)
m_(3,2) = G.T()                          x m_(1,2).T().D()*3
m_(4,2) = G.T()                          x m_(3,2).T().D()*12
m_(5,2) = G.T()                          x m_(4,2).T().D()*9
m_(2,0) = m_(5,2).T().D()                x m_(2,0)
=========================================================
[7.283188] m_(2,0) = G                              x {1@(11,11)}*5
    m1[0.000001] m2[0.000007] mul[7.144724] SS_mxm[5.244758] T[0.000000] zero_clean[1.762222]
--------------------------------------------------------
[6.322727] m_(1,2) = G.T()                          x m_(2,0).D()*6
    m1[0.000001] m2[0.000197] mul[6.184088] SS_mxm[4.571182] T[0.000000] zero_clean[1.475010]
--------------------------------------------------------
[8.202852] m_(1,2) = {1@(1345,1345)}                x m_(1,2)
    m1[0.000021] m2[1.584557] mul[6.339508] SS_mxm[4.591639] T[0.000000] zero_clean[1.473901]
--------------------------------------------------------
[7.247590] m_(3,2) = G.T()                          x m_(1,2).T().D()*3
    m1[0.000000] m2[0.903473] mul[6.206246] SS_mxm[4.598541] T[0.000000] zero_clean[1.468997]
--------------------------------------------------------
[7.236688] m_(4,2) = G.T()                          x m_(3,2).T().D()*12
    m1[0.000000] m2[0.897129] mul[6.203028] SS_mxm[4.592121] T[0.000000] zero_clean[1.468964]
--------------------------------------------------------
[7.249951] m_(5,2) = G.T()                          x m_(4,2).T().D()*9
    m1[0.000000] m2[0.908286] mul[6.205925] SS_mxm[4.616443] T[0.000000] zero_clean[1.454308]
--------------------------------------------------------
[9.523256] m_(2,0) = m_(5,2).T().D()                x m_(2,0)
    m1[0.898441] m2[1.585530] mul[6.768581] SS_mxm[5.103360] T[0.000000] zero_clean[1.392676]
--------------------------------------------------------
=========================================================
--------------------------------------------------------
Initial fill from m(2,0): num_nnz[10] get_nz[0.297494] vec_fill[0.000007]
  Fill from m(5,2): num_rec[        10] get_nz[0.082127] vec_cp[0.000002]
  Fill from m(4,2): num_rec[        10] get_nz[0.001450] vec_cp[0.000001]
  Fill from m(3,2): num_rec[        10] get_nz[0.001187] vec_cp[0.000001]
  Fill from m(1,2): num_rec[        10] get_nz[0.001659] vec_cp[0.000001]
--------------------------------------------------------
Num recs: 10
--------------------------------------------------------
Query muls time:        53.066466
Query result enum time: 0.384166
##############################################################################################################

#######################################################
Query: [../encoded_queries/lubm10240/five_copies/l5__1.q_encoded]
========
Node to qnode:
    (11->0) (357->1) (?x->2)
No cycles
Edges:
    {(2,0)->11} {(2,1)->6}
Directed adjacency list:
    0()  1()  2(0,1)
Tree adjacency list:
    0(2)  1(2)  2(0,1)
========
DDFS walk:
    (0,2) (2,1) (2,0)
=========================================================
Query plan:
m_(0,2) = {1@(11,11)}*11                 x G.T()
m_(2,1) = m_(0,2).T().D()*6              x G
m_(2,1) = m_(2,1)                        x {1@(357,357)}
m_(0,2) = m_(0,2)                        x m_(2,1).D()
=========================================================
Query plan: (CSC friendly)
m_(2,0) = G                              x {1@(11,11)}*11
m_(1,2) = G.T()                          x m_(2,0).D()*6
m_(1,2) = {1@(357,357)}                  x m_(1,2)
m_(2,0) = m_(1,2).T().D()                x m_(2,0)
=========================================================
[6.942065] m_(2,0) = G                              x {1@(11,11)}*11
    m1[0.000001] m2[0.000006] mul[6.789744] SS_mxm[5.134761] T[0.000000] zero_clean[1.514210]
--------------------------------------------------------
[6.941433] m_(1,2) = G.T()                          x m_(2,0).D()*6
    m1[0.000000] m2[0.000240] mul[6.800991] SS_mxm[5.161067] T[0.000000] zero_clean[1.502867]
--------------------------------------------------------
[8.322387] m_(1,2) = {1@(357,357)}                  x m_(1,2)
    m1[0.000023] m2[1.602564] mul[6.441616] SS_mxm[4.674832] T[0.000000] zero_clean[1.490473]
--------------------------------------------------------
[9.884186] m_(2,0) = m_(1,2).T().D()                x m_(2,0)
    m1[0.974145] m2[2.205189] mul[6.427809] SS_mxm[4.666152] T[0.000000] zero_clean[1.478616]
--------------------------------------------------------
=========================================================
--------------------------------------------------------
Initial fill from m(2,0): num_nnz[10] get_nz[0.302018] vec_fill[0.000008]
  Fill from m(1,2): num_rec[        10] get_nz[0.011153] vec_cp[0.000002]
--------------------------------------------------------
Num recs: 10
--------------------------------------------------------
Query muls time:        32.090234
Query result enum time: 0.313298
Query time (total):     32.694716
##############################################################################################################

#######################################################
Query: [../encoded_queries/lubm10240/five_copies/l6__1.q_encoded]
========
Node to qnode:
    (1345->0) (22638->1) (40169->2) (?x->3) (?y->4)
No cycles
Edges:
    {(3,0)->6} {(3,4)->5} {(4,1)->6} {(4,2)->11}
Directed adjacency list:
    0()  1()  2()  3(4,0)  4(2,1)
Tree adjacency list:
    0(3)  1(4)  2(4)  3(4,0)  4(2,1,3)
========
DDFS walk:
    (0,3) (3,4) (4,1) (4,2) (4,3) (3,0)
=========================================================
Query plan:
m_(0,3) = {1@(1345,1345)}*6              x G.T()
m_(3,4) = m_(0,3).T().D()*5              x G
m_(4,1) = m_(3,4).T().D()*6              x G
m_(4,1) = m_(4,1)                        x {1@(22638,22638)}
m_(4,2) = m_(4,1).D()*11                 x G
m_(4,2) = m_(4,2)                        x {1@(40169,40169)}
m_(3,4) = m_(3,4)                        x m_(4,2).D()
m_(0,3) = m_(0,3)                        x m_(3,4).D()
=========================================================
Query plan: (CSC friendly)
m_(3,0) = G                              x {1@(1345,1345)}*6
m_(4,3) = G.T()                          x m_(3,0).D()*5
m_(1,4) = G.T()                          x m_(4,3).D()*6
m_(1,4) = {1@(22638,22638)}              x m_(1,4)
m_(2,4) = G.T()                          x m_(1,4).T().D()*11
m_(2,4) = {1@(40169,40169)}              x m_(2,4)
m_(4,3) = m_(2,4).T().D()                x m_(4,3)
m_(3,0) = m_(4,3).T().D()                x m_(3,0)
=========================================================
[6.770872] m_(3,0) = G                              x {1@(1345,1345)}*6
    m1[0.000000] m2[0.000008] mul[6.631397] SS_mxm[4.977584] T[0.000000] zero_clean[1.500194]
--------------------------------------------------------
[10.052966] m_(4,3) = G.T()                          x m_(3,0).D()*5
    m1[0.000000] m2[0.995505] mul[8.917275] SS_mxm[7.189514] T[0.000000] zero_clean[1.573075]
--------------------------------------------------------
[6.646484] m_(1,4) = G.T()                          x m_(4,3).D()*6
    m1[0.000000] m2[0.126138] mul[6.381971] SS_mxm[4.755573] T[0.000000] zero_clean[1.487592]
--------------------------------------------------------
[8.208663] m_(1,4) = {1@(22638,22638)}              x m_(1,4)
    m1[0.000023] m2[1.585510] mul[6.346633] SS_mxm[4.596164] T[0.000000] zero_clean[1.476373]
--------------------------------------------------------
[7.470514] m_(2,4) = G.T()                          x m_(1,4).T().D()*11
    m1[0.000000] m2[0.932999] mul[6.400217] SS_mxm[4.794359] T[0.000000] zero_clean[1.470403]
--------------------------------------------------------
[8.235969] m_(2,4) = {1@(40169,40169)}              x m_(2,4)
    m1[0.000020] m2[1.595455] mul[6.362162] SS_mxm[4.635303] T[0.000000] zero_clean[1.454693]
--------------------------------------------------------
[10.473738] m_(4,3) = m_(2,4).T().D()                x m_(4,3)
    m1[0.898623] m2[2.184610] mul[7.117218] SS_mxm[5.368681] T[0.000000] zero_clean[1.471427]
--------------------------------------------------------
[9.832082] m_(3,0) = m_(4,3).T().D()                x m_(3,0)
    m1[0.910714] m2[2.184457] mul[6.461972] SS_mxm[4.666034] T[0.000000] zero_clean[1.520138]
--------------------------------------------------------
=========================================================
--------------------------------------------------------
Initial fill from m(3,0): num_nnz[121] get_nz[0.301198] vec_fill[0.000021]
  Fill from m(4,3): num_rec[       121] get_nz[0.006146] vec_cp[0.000011]
  Fill from m(2,4): num_rec[       121] get_nz[0.007332] vec_cp[0.000010]
  Fill from m(1,4): num_rec[       121] get_nz[0.003421] vec_cp[0.000009]
--------------------------------------------------------
Num recs: 121
--------------------------------------------------------
Query muls time:        67.691576
Query result enum time: 0.318408
Query time (total):     68.742266
##############################################################################################################

#######################################################
Query: [../encoded_queries/lubm10240/five_copies/l7__1.q_encoded]
========
Node to qnode:
    (1345->0) (43->1) (79->2) (?x->3) (?y->4) (?z->5)
Equal pairs:
    (6->5)
Edges:
    {(3,1)->6} {(3,4)->8} {(3,5)->13} {(4,2)->6} {(5,0)->6}
    {(6,4)->4}
Directed adjacency list:
    0()  1()  2()  3(1,5,4)  4(2)  5(0,4)
Tree adjacency list:
    0(5)  1(3)  2(4)  3(1,5,4)  4(6,2,3)  5(3,0)  6(4)
========
DDFS walk:
    (0,5) (5,3) (3,1) (3,4) (4,2) (4,6) (4,3) (3,5) (5,0)
=========================================================
Query plan:
m_(0,5) = {1@(1345,1345)}*6              x G.T()
m_(5,3) = m_(0,5).T().D()*13             x G.T()
m_(3,1) = m_(5,3).T().D()*6              x G
m_(3,1) = m_(3,1)                        x {1@(43,43)}
m_(3,4) = m_(3,1).D()*8                  x G
m_(4,2) = m_(3,4).T().D()*6              x G
m_(4,2) = m_(4,2)                        x {1@(79,79)}
m_(4,6) = m_(4,2).D()*4                  x G.T()
m_(4,6) = m_(4,6)                        x m_(5,3).D()
m_(5,3) = m_(4,6).T().D()                x m_(5,3)
m_(3,4) = m_(3,4)                        x m_(4,6).D()
m_(5,3) = m_(5,3)                        x m_(3,4).D()
m_(0,5) = m_(0,5)                        x m_(5,3).D()
=========================================================
Query plan: (CSC friendly)
m_(5,0) = G                              x {1@(1345,1345)}*6
m_(3,5) = G                              x m_(5,0).D()*13
m_(1,3) = G.T()                          x m_(3,5).D()*6
m_(1,3) = {1@(43,43)}                    x m_(1,3)
m_(4,3) = G.T()                          x m_(1,3).T().D()*8
m_(2,4) = G.T()                          x m_(4,3).D()*6
m_(2,4) = {1@(79,79)}                    x m_(2,4)
m_(6,4) = G                              x m_(2,4).T().D()*4
m_(6,4) = m_(3,5).T().D()                x m_(6,4)
m_(3,5) = m_(3,5)                        x m_(6,4).D()
m_(4,3) = m_(6,4).T().D()                x m_(4,3)
m_(3,5) = m_(4,3).T().D()                x m_(3,5)
m_(5,0) = m_(3,5).T().D()                x m_(5,0)
=========================================================
[6.567301] m_(5,0) = G                              x {1@(1345,1345)}*6
    m1[0.000001] m2[0.000009] mul[6.425098] SS_mxm[4.769387] T[0.000000] zero_clean[1.512800]
--------------------------------------------------------
[10.773228] m_(3,5) = G                              x m_(5,0).D()*13
    m1[0.000000] m2[1.004002] mul[9.627307] SS_mxm[7.699629] T[0.000000] zero_clean[1.759569]
--------------------------------------------------------
[18.680939] m_(1,3) = G.T()                          x m_(3,5).D()*6
    m1[0.000000] m2[4.309290] mul[14.227716] SS_mxm[11.949743] T[0.000000] zero_clean[2.057057]
--------------------------------------------------------
[9.376490] m_(1,3) = {1@(43,43)}                    x m_(1,3)
    m1[0.000021] m2[1.665596] mul[7.428049] SS_mxm[5.569078] T[0.000000] zero_clean[1.565255]
--------------------------------------------------------
[11.260634] m_(4,3) = G.T()                          x m_(1,3).T().D()*8
    m1[0.000001] m2[1.497078] mul[9.620098] SS_mxm[7.668379] T[0.000000] zero_clean[1.784568]
--------------------------------------------------------
[10.958983] m_(2,4) = G.T()                          x m_(4,3).D()*6
    m1[0.000001] m2[2.686454] mul[8.131894] SS_mxm[6.412342] T[0.000000] zero_clean[1.573689]
--------------------------------------------------------
[8.873918] m_(2,4) = {1@(79,79)}                    x m_(2,4)
    m1[0.000020] m2[1.640640] mul[6.956599] SS_mxm[5.068068] T[0.000000] zero_clean[1.652727]
--------------------------------------------------------
[15.102770] m_(6,4) = G                              x m_(2,4).T().D()*4
    m1[0.000000] m2[1.589427] mul[13.372775] SS_mxm[10.946322] T[0.000000] zero_clean[2.179915]
--------------------------------------------------------
[11.736185] m_(6,4) = m_(3,5).T().D()                x m_(6,4)
    m1[1.727698] m2[1.618918] mul[8.112632] SS_mxm[6.527558] T[0.000000] zero_clean[1.377520]
--------------------------------------------------------
[9.970038] m_(3,5) = m_(3,5)                        x m_(6,4).D()
    m1[1.675501] m2[0.470982] mul[7.543057] SS_mxm[5.717784] T[0.000000] zero_clean[1.533996]
--------------------------------------------------------
[14.048047] m_(4,3) = m_(6,4).T().D()                x m_(4,3)
    m1[1.182385] m2[2.283777] mul[10.299541] SS_mxm[8.484127] T[0.000000] zero_clean[1.530571]
--------------------------------------------------------
[11.983549] m_(3,5) = m_(4,3).T().D()                x m_(3,5)
    m1[1.350281] m2[2.205205] mul[8.144645] SS_mxm[6.431415] T[0.000000] zero_clean[1.453303]
--------------------------------------------------------
[10.291798] m_(5,0) = m_(3,5).T().D()                x m_(5,0)
    m1[1.126299] m2[2.206622] mul[6.685899] SS_mxm[4.924740] T[0.000000] zero_clean[1.484087]
--------------------------------------------------------
=========================================================
--------------------------------------------------------
Initial fill from m(5,0): num_nnz[1215871] get_nz[0.314587] vec_fill[0.131551]
  Fill from m(3,5): num_rec[   2596285] get_nz[0.567266] vec_cp[0.208948]
  Fill from m(4,3): num_rec[   3366415] get_nz[0.984888] vec_cp[0.279451]
  Fill from m(6,4): num_rec[    450539] get_nz[0.892491] vec_cp[0.069237]
  Fill from m(2,4): num_rec[    450539] get_nz[0.200548] vec_cp[0.007203]
  Fill from m(1,3): num_rec[    450539] get_nz[0.193589] vec_cp[0.007153]
--------------------------------------------------------
Num recs: 450539
--------------------------------------------------------
Query muls time:        149.624374
Query result enum time: 4.093738
Query time (total):     154.717956
##############################################################################################################